
//write some code here. You can do it!



/*

TODO:
* What are the tasks defined in the 'war' plug-in?, list them.
* What are the tasks defined in the 'jetty' plug-in?, list them.
* Define a defaultTask.
* Create an deploy a war file including the html file "implmenting the 'war and jetty' plugin".
	Quick review: The War plugin ***extends*** the Java plugin to add support for assembling web application WAR files. It disables the default JAR archive generation of the Java plugin and adds a default WAR archive task.
* Open the web browser and validate the output. Hello Gradle!!

** NOTE: we could ask them to customize the war task.
war {
    from 'src/rootContent' // adds a file-set to the root of the archive
    webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
    classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
    classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
    webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml
}


*/